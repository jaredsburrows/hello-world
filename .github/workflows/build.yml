name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, labeled, unlabeled, synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.2.2

      - name: Configure Assembly
        uses: ilammy/setup-nasm@v1.5.2

      - name: Assembly
        run: nasm -f elf64 -g -F DWARF HelloWorld.asm && ld -e start -o HelloWorld.out HelloWorld.o && ./HelloWorld.out
        working-directory: ./assembly

      - name: Awk
        run: awk -f HelloWorld.awk
        working-directory: ./awk

      - name: Bash
        run: bash hello_world.sh
        working-directory: ./bash

      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y wine64 wine32

      - name: Batch
        run: wine cmd /c hello_world.bat
        working-directory: ./batch

      - name: Configure GCC and G++
        uses: egor-tensin/setup-gcc@v1.3
        with:
          version: latest
          platform: x64
          cc: 1

      - name: C
        run: gcc HelloWorld.c -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./c

      - name: Configure C#
        uses: actions/setup-dotnet@v4.3.1

      - name: Setup C#
        run: dotnet new console -lang C# -n c#

      - name: C#
        run: rm Program.cs && dotnet build && dotnet run
        working-directory: ./c#

      - name: Configure Clojure
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: 1.10.1.693 # required

      - name: Clojure
        run: clojure -M HelloWorld.clj
        working-directory: ./clojure

      - name: Configure Cobol
        uses: fabasoad/setup-cobol-action@v1.5.0

      - name: Cobol
        run: cobc -x -free -o HelloWorld.out HelloWorld.cbl && ./HelloWorld.out
        working-directory: ./cobol

      - name: C++
        run: g++ HelloWorld.cpp -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./c++

      - name: Configure D
        uses: dlang-community/setup-dlang@v2.0.0

      - name: D
        run: dmd HelloWorld.d -of=HelloWorld.out && ./HelloWorld.out
        working-directory: ./d

      - name: Configure Dart
        uses: dart-lang/setup-dart@v1.7.1
        with:
          sdk: stable

      - name: Dart
        run: dart HelloWorld.dart
        working-directory: ./dart

      - name: Configure Erlang
        uses: erlef/setup-beam@v1.20.3
        with:
          otp-version: 25.2 # required

      - name: Erlang
        run: erlc helloworld.erl && erl -noshell -s helloworld main -s init stop
        working-directory: ./erlang

      - name: Setup F#
        run: dotnet new console -lang F# -n f#

      - name: F#
        run: rm Program.fs && sed -i 's/Program.fs/HelloWorld.fs/' f\#.fsproj && dotnet build && dotnet run
        working-directory: ./f#

      - name: Setup Fortran
        uses: fortran-lang/setup-fortran@v1.6.3
        with:
          compiler: gcc
          version: 13

      - name: Fortran
        run: gfortran -o helloworld ./helloworld.f90 && ./helloworld
        working-directory: ./fortran

      - name: Configure Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: 1.24.x
          cache: true
          cache-dependency-path: "**/go.sum"

      - name: Go
        run: go build -o HelloWorld.out HelloWorld.go && ./HelloWorld.out
        working-directory: ./go

      - name: Configure Groovy
        uses: wtfjoke/setup-groovy@v2.0.5
        with:
          groovy-version: 4.x # required

      - name: Groovy
        run: groovy HelloWorld.groovy
        working-directory: ./groovy

      - name: Configure Haskell
        uses: haskell-actions/setup@v2.8.0

      - name: Haskell
        run: ghc HelloWorld.hs -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./haskell

      - name: Configure HTML
        run: sudo apt-get install lynx

      - name: HTML
        run: lynx -dump HelloWorld.html
        working-directory: ./html

      - name: Configure JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 19 # required

      - name: Java
        run: javac HelloWorld.java && java HelloWorld
        working-directory: ./java

      - name: Configure Node
        uses: actions/setup-node@v4

      - name: JavaScript
        run: node HelloWorld.js
        working-directory: ./javascript

      - name: Configure Kotlin
        uses: fwilhe2/setup-kotlin@v1.2

      - name: Kotlin
        run: kotlinc HelloWorld.kt && kotlin HelloWorldKt
        working-directory: ./kotlin

      - name: Configure Lisp
        uses: cheeze2000/setup-sbcl@v1

      - name: Lisp
        run: sbcl --script HelloWorld.lisp
        working-directory: ./lisp

      - name: Configure Lua
        uses: xpol/setup-lua@v0.3

      - name: Lua
        run: lua HelloWorld.lua
        working-directory: ./lua

      - name: Configure Clang
        uses: egor-tensin/setup-clang@v1.4

      - name: Objective-C
        run: clang HelloWorld.m -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./objective-c

      - name: Configure OCaml
        uses: ocaml/setup-ocaml@v3.4.1
        with:
          ocaml-compiler: 5.0.0 # required

      - name: OCaml
        run: opam init && eval $(opam env) && ocamlc HelloWorld.ml -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./ocaml

      - name: Configure Pascal
        uses: fabasoad/pascal-action@v1.1.3 # should be using fpc? fpc HelloWorld.pas -oHelloWorld.out && ./HelloWorld.out
        id: pascal
        with:
          path: pascal/HelloWorld.pas
      - run: echo "${{ steps.pascal.outputs.result }}"

      - name: Configure Perl
        uses: shogo82148/actions-setup-perl@v1.34.0

      - name: Perl
        run: perl HelloWorld.pl
        working-directory: ./perl

      - name: Configure PHP
        uses: shivammathur/setup-php@v2

      - name: PHP
        run: php HelloWorld.php
        working-directory: ./php

      - name: PowerShell
        run: ./Helloworld.ps1
        shell: pwsh
        working-directory: ./powershell

      - name: Configure Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: 3.13.2

      - name: Python
        run: python HelloWorld.py
        working-directory: ./python

      - name: Configure R
        uses: r-lib/actions/setup-r@v2.11.3

      - name: R
        run: Rscript HelloWorld.r
        working-directory: ./r

      - name: Configure Racket
        uses: Bogdanp/setup-racket@v1.14
        with:
          version: 8.5 # required

      - name: Racket
        run: racket HelloWorld.rkt
        working-directory: ./racket

      - name: Configure Ruby
        uses: ruby/setup-ruby@v1.245.0
        with:
          ruby-version: 3.0 # required
          bundler-cache: true

      - name: Ruby
        run: ruby HelloWorld.rb
        working-directory: ./ruby

      - name: Configure Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0

      - name: Rust
        run: rustc HelloWorld.rs -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./rust

      - name: Configure Scala
        uses: coursier/setup-action@v1.3.9
        with:
          apps: scala

      - name: Scala
        run: scala HelloWorld.scala
        working-directory: ./scala

      - name: Configure Swift
        uses: swift-actions/setup-swift@v2.2.0

      - name: Swift
        run: swiftc HelloWorld.swift -o HelloWorld.out && ./HelloWorld.out
        working-directory: ./swift

      - name: TypeScript
        run: node HelloWorld.ts
        working-directory: ./typescript
